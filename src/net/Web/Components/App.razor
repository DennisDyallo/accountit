<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <base href="/"/>
    <link rel="stylesheet" href="bootstrap/bootstrap.min.css"/>
    <link rel="stylesheet" href="app.css"/>
    <link rel="stylesheet" href="AccountIt.styles.css"/>
    <link rel="icon" type="image/png" href="favicon.png"/>
    <HeadOutlet/>
</head>

<body>
<Routes/>
<script src="_framework/blazor.web.js"></script>
<script>
    window.indexedDb = {
        async get(storeName, id) {
            const db = await openDatabase();
            const transaction = db.transaction(storeName, 'readonly');
            const store = transaction.objectStore(storeName);
            return await store.get(id);
        },
    
        async getAll(storeName) {
            const db = await openDatabase();
            const transaction = db.transaction(storeName, 'readonly');
            const store = transaction.objectStore(storeName);
            return await store.getAll();
        },
    
        async add(storeName, entity) {
            const db = await openDatabase();
            const transaction = db.transaction(storeName, 'readwrite');
            const store = transaction.objectStore(storeName);
            await store.add(entity);
        },
    
        async put(storeName, entity) {
            const db = await openDatabase();
            const transaction = db.transaction(storeName, 'readwrite');
            const store = transaction.objectStore(storeName);
            await store.put(entity);
        },
    
        async delete(storeName, id) {
            const db = await openDatabase();
            const transaction = db.transaction(storeName, 'readwrite');
            const store = transaction.objectStore(storeName);
            await store.delete(id);
        }
    };
</script>
</body>

</html>